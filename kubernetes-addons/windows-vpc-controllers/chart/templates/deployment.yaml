{{- $resourceControllerName := .Values.resourceController.name -}}
{{- $admissionWebhookName := .Values.admissionWebhook.name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $resourceControllerName }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $resourceControllerName }}
      tier: backend
      track: stable
  template:
    metadata:
      labels:
        app: {{ $resourceControllerName }}
        tier: backend
        track: stable
    spec:
      serviceAccount: {{ $resourceControllerName }}
      containers:
        - name: {{ $resourceControllerName }}
          command:
            - /vpc-resource-controller
          {{- with .Values.resourceController.containerCommand.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ printf "%s:%s" .Values.resourceController.image.repository .Values.resourceController.image.tag }}
          imagePullPolicy: {{ .Values.resourceController.image.pullPolicy }}
          livenessProbe:
            failureThreshold: {{ .Values.resourceController.livenessProbe.failureThreshold }}
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: {{ .Values.resourceController.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.resourceController.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.resourceController.livenessProbe.timeoutSeconds }}
          securityContext:
            privileged: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $admissionWebhookName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ $admissionWebhookName }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ $admissionWebhookName }}
  template:
    metadata:
      labels:
        app: {{ $admissionWebhookName }}
    spec:
      containers:
        - name: {{ $admissionWebhookName }}
          {{- with .Values.admissionWebhook.containerCommand.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ printf "%s:%s" .Values.admissionWebhook.image.repository .Values.admissionWebhook.image.tag }}
          imagePullPolicy: {{ .Values.admissionWebhook.image.pullPolicy }}
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/tls
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      volumes:
        - name: webhook-certs
          secret:
            secretName: {{ .Values.admissionWebhook.secret.name }}
